package main

import (
	"fmt"

	"github.com/aliforever/encryptionbox"
)

func main() {
	privateKey, err := encryptionbox.EncryptionBox{}.RSA.Generate2048Bits()
	if err != nil {
		fmt.Println(err)
		return
	}
	_, err = encryptionbox.EncryptionBox{}.RSA.PublicKeyToPKCS1PEM(&privateKey.PublicKey)
	if err != nil {
		fmt.Println(err)
		return
	}

	privatePemBytes := []byte{45, 45, 45, 45, 45, 66, 69, 71, 73, 78, 32, 82, 83, 65, 32, 80, 82, 73, 86, 65, 84, 69, 32, 75, 69, 89, 45, 45, 45, 45, 45, 10, 77, 73, 73, 69, 112, 81, 73, 66, 65, 65, 75, 67, 65, 81, 69, 65, 51, 97, 69, 47, 78, 77, 48, 103, 107, 88, 109, 113, 55, 43, 80, 112, 53, 69, 52, 53, 101, 51, 119, 120, 100, 88, 106, 86, 65, 107, 71, 113, 78, 66, 47, 98, 57, 114, 80, 121, 72, 54, 52, 74, 77, 57, 117, 73, 10, 98, 66, 102, 86, 74, 111, 108, 83, 70, 74, 85, 65, 49, 67, 107, 57, 109, 90, 119, 111, 81, 51, 120, 57, 100, 104, 102, 49, 77, 107, 52, 79, 100, 100, 113, 43, 50, 71, 78, 116, 54, 74, 82, 116, 108, 102, 78, 50, 78, 70, 48, 68, 57, 122, 80, 56, 81, 50, 110, 106, 110, 53, 107, 71, 10, 100, 52, 74, 77, 68, 43, 118, 114, 72, 98, 118, 99, 104, 90, 71, 49, 76, 103, 72, 88, 104, 48, 90, 122, 53, 87, 86, 104, 84, 43, 48, 112, 90, 112, 78, 83, 57, 109, 87, 85, 53, 69, 111, 54, 80, 87, 100, 103, 89, 89, 116, 83, 119, 65, 104, 66, 52, 116, 89, 55, 43, 85, 48, 69, 10, 100, 112, 101, 110, 66, 43, 100, 83, 85, 75, 54, 66, 56, 84, 53, 50, 109, 100, 83, 118, 105, 67, 49, 113, 87, 101, 67, 100, 54, 110, 48, 117, 83, 103, 87, 116, 104, 118, 67, 84, 57, 109, 50, 120, 72, 109, 108, 103, 77, 86, 73, 122, 86, 71, 66, 51, 56, 109, 71, 99, 80, 86, 116, 73, 10, 57, 122, 109, 108, 48, 88, 56, 112, 115, 98, 67, 97, 47, 72, 48, 75, 90, 122, 49, 116, 47, 72, 80, 70, 99, 106, 81, 56, 47, 52, 107, 118, 74, 102, 73, 67, 114, 78, 82, 82, 100, 56, 113, 87, 79, 69, 90, 110, 55, 79, 103, 82, 113, 118, 108, 84, 54, 54, 49, 66, 110, 84, 53, 49, 10, 89, 55, 100, 78, 121, 84, 75, 88, 87, 55, 84, 69, 56, 55, 65, 84, 70, 101, 54, 111, 97, 76, 112, 75, 72, 117, 70, 122, 69, 43, 82, 122, 86, 112, 90, 108, 112, 81, 73, 68, 65, 81, 65, 66, 65, 111, 73, 66, 65, 81, 68, 80, 54, 114, 102, 76, 74, 121, 48, 73, 106, 79, 87, 113, 10, 67, 49, 121, 102, 68, 67, 117, 116, 66, 119, 79, 51, 79, 116, 90, 75, 79, 97, 81, 100, 74, 107, 53, 76, 69, 79, 70, 121, 105, 117, 105, 106, 78, 54, 54, 121, 67, 87, 71, 122, 116, 49, 118, 68, 90, 48, 51, 82, 117, 54, 98, 73, 100, 116, 68, 110, 68, 117, 68, 56, 97, 116, 108, 105, 10, 105, 103, 118, 83, 48, 74, 88, 57, 108, 114, 110, 68, 87, 89, 117, 57, 65, 120, 117, 47, 89, 65, 117, 97, 87, 55, 67, 113, 53, 97, 110, 102, 84, 99, 88, 100, 85, 43, 86, 98, 103, 109, 50, 101, 66, 87, 71, 75, 66, 80, 109, 57, 52, 89, 104, 54, 112, 99, 79, 81, 84, 120, 50, 78, 10, 120, 43, 88, 120, 68, 119, 68, 106, 109, 115, 83, 108, 114, 109, 85, 89, 117, 101, 83, 88, 88, 103, 99, 82, 108, 67, 50, 76, 83, 77, 85, 113, 82, 104, 47, 112, 81, 119, 74, 56, 89, 51, 65, 50, 67, 83, 104, 90, 98, 73, 88, 49, 69, 120, 73, 108, 90, 89, 122, 114, 90, 77, 75, 100, 10, 53, 121, 109, 55, 72, 73, 76, 82, 75, 48, 72, 77, 57, 56, 80, 87, 106, 97, 83, 78, 107, 118, 81, 97, 117, 70, 69, 66, 52, 76, 103, 51, 70, 106, 112, 110, 116, 88, 75, 43, 81, 47, 84, 68, 52, 54, 109, 49, 77, 88, 47, 103, 111, 53, 102, 113, 112, 74, 120, 72, 111, 50, 119, 73, 10, 74, 98, 109, 67, 57, 70, 111, 83, 115, 89, 114, 52, 53, 74, 102, 86, 67, 83, 113, 75, 115, 111, 67, 88, 83, 70, 56, 110, 90, 81, 106, 106, 110, 71, 71, 71, 89, 82, 82, 66, 108, 111, 89, 77, 85, 112, 79, 104, 100, 122, 116, 118, 47, 90, 103, 74, 81, 103, 68, 83, 120, 65, 76, 50, 10, 119, 89, 79, 83, 75, 84, 68, 53, 65, 111, 71, 66, 65, 79, 55, 77, 88, 107, 121, 69, 81, 121, 79, 88, 48, 101, 52, 117, 71, 57, 110, 83, 110, 55, 72, 73, 111, 67, 81, 81, 57, 98, 87, 55, 87, 71, 77, 76, 86, 51, 85, 80, 97, 103, 77, 54, 43, 121, 101, 116, 117, 112, 65, 107, 10, 84, 89, 97, 74, 113, 106, 112, 83, 87, 69, 121, 110, 105, 102, 108, 102, 53, 102, 120, 47, 117, 120, 100, 104, 110, 100, 70, 108, 67, 56, 47, 84, 86, 89, 51, 121, 47, 52, 65, 90, 105, 66, 65, 47, 89, 72, 116, 48, 47, 106, 84, 72, 121, 121, 122, 68, 114, 103, 98, 105, 113, 118, 55, 50, 10, 70, 115, 102, 73, 81, 80, 118, 75, 83, 104, 71, 117, 66, 47, 103, 113, 117, 101, 78, 122, 102, 82, 90, 98, 115, 103, 68, 102, 47, 89, 105, 82, 104, 111, 110, 117, 120, 86, 50, 43, 103, 106, 110, 83, 116, 114, 69, 47, 113, 107, 54, 114, 82, 76, 102, 80, 65, 111, 71, 66, 65, 79, 50, 89, 10, 82, 49, 116, 118, 43, 85, 98, 102, 108, 48, 113, 104, 77, 111, 69, 82, 111, 106, 53, 52, 70, 66, 121, 106, 116, 113, 82, 51, 48, 88, 114, 88, 103, 119, 99, 111, 97, 85, 73, 103, 113, 98, 104, 47, 89, 53, 56, 90, 67, 65, 56, 106, 90, 103, 116, 74, 50, 81, 84, 109, 114, 57, 114, 76, 10, 86, 47, 55, 118, 121, 56, 115, 97, 53, 117, 47, 83, 83, 116, 67, 114, 105, 120, 48, 84, 116, 43, 115, 108, 83, 66, 68, 90, 47, 84, 105, 65, 50, 98, 118, 104, 57, 108, 67, 66, 103, 52, 69, 71, 51, 84, 100, 118, 70, 97, 77, 67, 75, 100, 43, 47, 117, 69, 82, 51, 71, 119, 101, 57, 10, 85, 47, 49, 43, 117, 106, 119, 85, 103, 111, 101, 90, 74, 115, 66, 105, 101, 56, 74, 86, 99, 48, 112, 56, 105, 113, 54, 78, 104, 78, 82, 56, 56, 88, 69, 76, 71, 98, 82, 76, 65, 111, 71, 65, 97, 99, 70, 89, 103, 99, 113, 82, 99, 86, 72, 114, 82, 118, 66, 107, 112, 84, 77, 67, 10, 82, 108, 110, 122, 107, 103, 86, 119, 121, 43, 115, 77, 87, 100, 68, 77, 67, 113, 117, 111, 53, 52, 86, 88, 100, 86, 115, 98, 74, 72, 114, 118, 87, 111, 88, 100, 80, 98, 98, 54, 73, 47, 105, 79, 119, 107, 73, 87, 79, 74, 122, 89, 51, 113, 72, 56, 111, 112, 57, 57, 101, 54, 121, 56, 10, 86, 119, 69, 109, 53, 106, 82, 111, 98, 99, 109, 106, 107, 81, 108, 102, 67, 48, 68, 119, 87, 103, 76, 80, 76, 51, 49, 121, 47, 84, 99, 47, 72, 51, 115, 119, 84, 70, 74, 113, 79, 121, 111, 51, 110, 86, 66, 79, 119, 115, 121, 67, 117, 85, 81, 105, 115, 81, 67, 66, 53, 57, 109, 76, 10, 71, 56, 115, 67, 51, 87, 70, 104, 105, 118, 111, 109, 114, 112, 106, 106, 99, 55, 79, 108, 50, 48, 69, 67, 103, 89, 69, 65, 109, 90, 83, 48, 107, 52, 79, 71, 56, 43, 119, 50, 66, 74, 83, 56, 97, 55, 102, 49, 85, 48, 73, 86, 90, 103, 110, 104, 86, 117, 68, 111, 116, 79, 111, 52, 10, 70, 86, 108, 109, 54, 77, 114, 113, 83, 111, 116, 49, 51, 118, 75, 48, 82, 101, 122, 81, 50, 110, 48, 113, 51, 107, 77, 114, 54, 49, 100, 69, 69, 49, 80, 52, 80, 78, 113, 118, 54, 116, 102, 90, 97, 112, 100, 111, 102, 105, 119, 118, 49, 55, 48, 113, 110, 49, 72, 53, 111, 66, 117, 83, 10, 73, 121, 80, 71, 76, 51, 88, 52, 104, 108, 47, 107, 103, 82, 43, 54, 77, 98, 117, 70, 83, 56, 47, 72, 69, 101, 75, 88, 119, 50, 72, 55, 116, 56, 72, 67, 75, 110, 72, 114, 105, 106, 70, 83, 88, 107, 117, 75, 121, 105, 121, 111, 77, 76, 55, 101, 101, 107, 83, 97, 86, 121, 120, 73, 10, 101, 90, 84, 43, 85, 89, 56, 67, 103, 89, 69, 65, 54, 76, 122, 80, 65, 108, 79, 49, 114, 80, 50, 52, 112, 50, 87, 48, 111, 67, 121, 120, 69, 77, 88, 77, 69, 99, 87, 65, 117, 99, 122, 65, 110, 108, 70, 102, 70, 121, 105, 50, 86, 72, 120, 89, 54, 74, 83, 75, 102, 114, 74, 82, 10, 101, 115, 86, 103, 104, 55, 69, 53, 78, 122, 90, 79, 98, 48, 85, 87, 104, 97, 120, 86, 115, 111, 102, 90, 117, 53, 66, 82, 117, 54, 56, 86, 114, 106, 88, 78, 57, 103, 56, 120, 111, 90, 122, 110, 75, 48, 118, 103, 79, 67, 66, 55, 119, 76, 66, 87, 111, 79, 69, 57, 55, 90, 74, 77, 10, 47, 100, 106, 50, 112, 80, 89, 51, 67, 84, 116, 56, 51, 112, 88, 105, 102, 81, 109, 106, 97, 48, 78, 57, 87, 120, 75, 74, 56, 50, 55, 81, 102, 107, 86, 68, 77, 85, 97, 121, 74, 111, 112, 112, 98, 80, 77, 90, 72, 115, 57, 69, 87, 117, 73, 61, 10, 45, 45, 45, 45, 45, 69, 78, 68, 32, 82, 83, 65, 32, 80, 82, 73, 86, 65, 84, 69, 32, 75, 69, 89, 45, 45, 45, 45, 45, 10}
	privateKey, err = encryptionbox.EncryptionBox{}.RSA.PrivateKeyFromPKCS1PEMBytes(privatePemBytes)
	if err != nil {
		fmt.Println(err)
		return
	}
	encryptedEncryptionKey := []byte{125, 93, 80, 251, 54, 186, 64, 156, 231, 168, 66, 173, 28, 39, 115, 88, 252, 27, 21, 21, 188, 24, 42, 49, 114, 46, 13, 96, 56, 69, 157, 242, 47, 129, 228, 129, 160, 20, 36, 133, 60, 153, 82, 115, 68, 157, 58, 107, 255, 98, 148, 94, 49, 48, 137, 215, 188, 35, 50, 89, 186, 220, 212, 117, 83, 69, 183, 113, 212, 206, 136, 235, 169, 105, 120, 17, 199, 131, 69, 240, 103, 187, 210, 91, 93, 47, 92, 108, 226, 19, 207, 236, 52, 177, 181, 80, 129, 149, 1, 56, 64, 252, 2, 238, 37, 179, 62, 126, 190, 139, 97, 227, 73, 92, 251, 180, 255, 114, 156, 206, 147, 208, 50, 190, 47, 228, 240, 205, 111, 169, 86, 200, 22, 211, 6, 98, 223, 227, 33, 125, 54, 123, 46, 4, 67, 107, 121, 191, 89, 93, 226, 174, 204, 35, 140, 18, 75, 35, 12, 51, 134, 24, 17, 91, 69, 152, 150, 131, 126, 142, 196, 29, 13, 51, 89, 45, 9, 76, 177, 207, 112, 7, 71, 174, 183, 49, 235, 14, 21, 79, 130, 229, 144, 255, 36, 247, 0, 13, 117, 31, 182, 2, 32, 227, 211, 205, 72, 81, 56, 190, 175, 214, 222, 22, 24, 246, 214, 23, 186, 56, 171, 113, 157, 190, 26, 205, 100, 248, 156, 6, 14, 246, 104, 33, 112, 202, 230, 52, 37, 150, 77, 250, 159, 130, 253, 58, 184, 245, 131, 173, 220, 199, 247, 36, 223, 25, 164, 177, 4, 18, 211, 217, 45, 113, 222, 172, 11, 145, 174, 221, 93, 21, 251, 104, 52, 227, 208, 66, 177, 93, 35, 145, 233, 217, 89, 190, 12, 9, 140, 79, 142, 155, 62, 51, 103, 163, 123, 230, 228, 248, 119, 55, 196, 127, 217, 228, 146, 35, 160, 247, 108, 2, 132, 63, 32, 160, 93, 223, 193, 124, 8, 85, 232, 21, 88, 197, 110, 146, 122, 104, 216, 214, 212, 110, 147, 210, 39, 112, 169, 98, 172, 231, 219, 236, 241, 228, 206, 48, 183, 194, 132, 154, 137, 246, 36, 249, 98, 163, 227, 208, 15, 152, 39, 72, 173, 228, 24, 195, 98, 168, 221, 247, 148, 145, 232, 108, 189, 2, 251, 121, 157, 229, 253, 23, 48, 32, 144, 253, 210, 22, 40, 178, 226, 152, 14, 109, 254, 154, 223, 154, 88, 174, 5, 7, 30, 53, 67, 11, 238, 165, 162, 240, 69, 41, 245, 64, 93, 117, 54, 130, 131, 211, 22, 38, 233, 5, 176, 166, 69, 42, 157, 48, 132, 6, 38, 86, 110, 204, 171, 166, 84, 89, 68, 12, 73, 40, 22, 161, 178, 89, 132, 170, 150, 163, 51, 6, 153, 93, 241, 47, 0, 150, 146, 39, 52, 74, 212, 101, 10, 81, 71, 96, 201, 97, 30, 22, 162, 56, 182, 164, 117, 101, 41, 170, 38, 38, 211, 252, 88, 86, 141, 218, 50, 139, 14, 140, 241, 235, 188, 12, 133, 77, 43, 116, 169, 246, 23, 143, 152, 100, 233, 234}

	key, err := encryptionbox.EncryptionBox{}.RSA.PrivateKeyDecryptPKCS1v15(privateKey, encryptedEncryptionKey)
	if err != nil {
		fmt.Println(err)
		return
	}
	encrypted := []byte{240, 65, 249, 22, 15, 35, 4, 68, 201, 50, 131, 69, 241, 244, 25, 11, 5, 119, 108, 234, 77, 148, 108, 26, 152, 105, 69, 41, 169, 191, 79, 251}
	iv := []byte{7, 0, 9, 10, 6, 3, 11, 2, 2, 11, 12, 1, 14, 5, 6, 14}
	// key := []byte{3, 1, 3, 3, 11, 15, 5, 7, 1, 6, 1, 9, 13, 7, 12, 1, 7, 2, 9, 9, 11, 8, 15, 8, 1, 15, 1, 2, 8, 2, 9, 3}
	decrypted, err := encryptionbox.EncryptionBox{}.AES.DecryptCbcPkcs5Padding(key, iv, encrypted)
	if err != nil {
		fmt.Println(err)
		return
	}
	fmt.Println(decrypted, string(decrypted))

	// fmt.Println(base64.StdEncoding.EncodeToString(pemBytes))
}
